# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2021-2024  Universit√© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#
---
stages:
  - build
  - check
  - analyze
  - deploy
  - new-release
  - set-release
  - release

default:
  interruptible: true

.main_template:
  rules:
    - if: ($CI_PIPELINE_SOURCE != "push") && ($CI_PIPELINE_SOURCE != "trigger")

# to download all the artifacts https://gitlab.inria.fr/starpu/starpu/-/jobs/artifacts/master/download?job=build
# https://gitlab.inria.fr/starpu/starpu/-/jobs/artifacts/master/raw/starpu-1.3.99.tar.gz?job=build
# https://gitlab.inria.fr/starpu/starpu/-/jobs/artifacts/master/raw/starpu.pdf?job=build
# https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#downloading-artifacts
build:
  extends: .main_template
  stage: build
  tags:
    - starpu
    - linux
  script:
    - ./contrib/gitlab/build.sh
  artifacts:
    paths:
      - starpu*.tar.gz
      - starpu*.pdf

.check_template:
  extends: .main_template
  stage: check
  needs: [build]
  dependencies:
    - build
  script:
    - ./contrib/gitlab/deploy.sh

check:
  extends: .check_template
  parallel:
    matrix:
      - NODE: [debian12, debian10, ubuntu1604, ubuntu1804, centos72amd64, macosx]
  tags:
    - ${NODE}

check_simgrid:
  extends: .check_template
  tags:
    - starpu
    - debian10
  script:
    - ./contrib/gitlab/simgrid.sh

#check_macosx:
#  extends: .check_template
#  tags : ["macosx"]
#  script:
#    - STARPU_USER_CONFIGURE_OPTIONS=--disable-mpi ./contrib/gitlab/deploy.sh

.analyze_template:
  extends: .main_template
  stage: analyze
  needs: [build]
  dependencies:
    - build

analyze_coverity:
  extends: .analyze_template
  tags:
    - starpu
    - linux
  script:
    - ./contrib/gitlab/coverity.sh

.deploy_template:
  extends: .main_template
  stage: deploy
  needs: [check]
  dependencies:
    - check

deploy_chameleon:
  extends: .deploy_template
  image: registry.gitlab.inria.fr/solverstack/docker/distrib
  tags: ['ci.inria.fr', 'linux', 'large', 'docker']
  script:
    - ./contrib/gitlab/chameleon.sh

new-release:
  stage: new-release
  only:
    - tags
  tags:
    - starpu-release
  script:
    - ./contrib/releases/new-release.sh
  timeout: 3h

set-release:
  stage: set-release
  dependencies:
    - new-release
  only:
    - tags
  tags:
    - starpu-release
  script:
    - ./contrib/releases/set-release.sh
  artifacts:
    paths:
      - release-cli.txt

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - set-release
  only:
    - tags
  tags:
    - ci.inria.fr
  script:
    - cat release-cli.txt
    - eval "$(cat release-cli.txt)"

