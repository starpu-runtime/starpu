# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2021-2025  University of Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#
---
stages:
  - daily
  - build
  - check
  - analyze
  - deploy
  - new-release
  - set-release
  - release

default:
  interruptible: true

.main_template:
  rules:
    - if: ($CI_PIPELINE_SOURCE != "push") && ($CI_PIPELINE_SOURCE != "trigger")

# to download all the artifacts https://gitlab.inria.fr/starpu/starpu/-/jobs/artifacts/master/download?job=build
# https://gitlab.inria.fr/starpu/starpu/-/jobs/artifacts/master/raw/starpu-1.3.99.tar.gz?job=build
# https://gitlab.inria.fr/starpu/starpu/-/jobs/artifacts/master/raw/starpu.pdf?job=build
# https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#downloading-artifacts
build:
  extends: .main_template
  stage: build
  image: registry.gitlab.inria.fr/starpu/starpu-docker/ci-debian12
  tags: ['ci.inria.fr', 'linux', 'large']
  script:
    - ./contrib/gitlab/build.sh
  artifacts:
    paths:
      - starpu*.tar.gz
      - starpu*.pdf

.check_template:
  extends: .main_template
  stage: check
  needs: [build]
  dependencies:
    - build
  script:
    - ./contrib/gitlab/deploy.sh

check_ci:
  extends: .check_template
  parallel:
    matrix:
      - NODE: [centos72amd64, macosx]
  tags:
    - ${NODE}
  script:
    - ./contrib/gitlab/deploy.sh

check:
  extends: .check_template
  parallel:
    matrix:
      - NODE: [debian12, debian10, ubuntu1604, ubuntu1804, ubuntu2004]
  image: registry.gitlab.inria.fr/starpu/starpu-docker/ci-${NODE}
  tags: ['ci.inria.fr', 'linux', 'large']

check_simgrid:
  extends: .check_template
  image: registry.gitlab.inria.fr/starpu/starpu-docker/ci-debian10
  tags: ['ci.inria.fr', 'linux', 'large']
  script:
    - ./contrib/gitlab/simgrid.sh

.analyze_template:
  extends: .main_template
  stage: analyze
  needs: [build]
  dependencies:
    - build

analyze_coverity:
  extends: .analyze_template
  tags:
    - starpu
    - linux
    - coverity
  script:
    - ./contrib/gitlab/coverity.sh

.deploy_template:
  extends: .main_template
  stage: deploy
  needs: [check]
  dependencies:
    - check

deploy_chameleon:
  extends: .deploy_template
  image: registry.gitlab.inria.fr/solverstack/chameleon
  tags: ['ci.inria.fr', 'linux', 'large']
  script:
    - ./contrib/gitlab/chameleon.sh

new-release:
  stage: new-release
  only:
    - tags
  tags:
    - starpu-release
  script:
    - ./contrib/releases/new-release.sh
  timeout: 3h

set-release:
  stage: set-release
  dependencies:
    - new-release
  only:
    - tags
  tags:
    - starpu-release
  script:
    - ./contrib/releases/set-release.sh
  artifacts:
    paths:
      - release-cli.txt

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - set-release
  only:
    - tags
  tags:
    - ci.inria.fr
  script:
    - cat release-cli.txt
    - eval "$(cat release-cli.txt)"


.coverage:
  stage: daily
  rules:
    - if: ($CI_PIPELINE_SCHEDULE_DESCRIPTION != null && $STARPU_RUN_BENCHMARKS == "yes")
      when: always

.coverage_artifacts:
  before_script:
    - rm -rf ./artifacts
  artifacts:
    when: always
    paths:
      - artifacts

coverage:
  extends: [.coverage, .coverage_artifacts]
  timeout: 2h
  variables:
    RUNNER_SCRIPT_TIMEOUT: 118m
    RUNNER_AFTER_SCRIPT_TIMEOUT: 2m
  tags: ['starpu', 'node_gpu']
  script:
    - ./contrib/gitlab/run_profile.sh coverage
  after_script:
    - ./contrib/gitlab/clean_profile.sh coverage

coverage_update:
  extends: .coverage
  timeout: 2h
  variables:
    RUNNER_SCRIPT_TIMEOUT: 118m
    RUNNER_AFTER_SCRIPT_TIMEOUT: 2m
  dependencies:
    - coverage
  needs:
    - coverage
  tags: ['starpu', 'node_gpu']
  script:
    - ./contrib/gitlab/upload.sh ./artifacts
